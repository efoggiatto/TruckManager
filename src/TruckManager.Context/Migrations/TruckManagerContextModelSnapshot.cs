// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TruckManager.Context;

namespace TruckManager.Context.Migrations
{
    [DbContext(typeof(TruckManagerContext))]
    partial class TruckManagerContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.2");

            modelBuilder.Entity("TruckManager.Domain.Truck", b =>
                {
                    b.Property<string>("Chassis")
                        .HasMaxLength(17)
                        .HasColumnType("nvarchar(17)");

                    b.Property<int>("BuildingYear")
                        .HasColumnType("int");

                    b.Property<int>("ModelYear")
                        .HasColumnType("int");

                    b.Property<int>("TruckModelId")
                        .HasColumnType("int");

                    b.HasKey("Chassis");

                    b.HasIndex("TruckModelId");

                    b.ToTable("Trucks");
                });

            modelBuilder.Entity("TruckManager.Domain.TruckModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("ModelCode")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("Id");

                    b.ToTable("TruckModels");
                });

            modelBuilder.Entity("TruckManager.Domain.Truck", b =>
                {
                    b.HasOne("TruckManager.Domain.TruckModel", "TruckModel")
                        .WithMany("Trucks")
                        .HasForeignKey("TruckModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TruckModel");
                });

            modelBuilder.Entity("TruckManager.Domain.TruckModel", b =>
                {
                    b.Navigation("Trucks");
                });
#pragma warning restore 612, 618
        }
    }
}
